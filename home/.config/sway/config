set $mod Mod4

workspace 1 output HDMI-A-1
workspace number "1"

output * bg ~/Pictures/wallpaper.jpg fill

# Float all dialog and utility windows
for_window [window_role="pop-up"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="utility"] floating enable

for_window [app_id="wofi"] border none

blur enable
blur_radius 5
blur_passes 2

# Enable PipeWire screen sharing
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec systemctl --user start pipewire pipewire-pulse wireplumber xdg-desktop-portal xdg-desktop-portal-wlr

gaps inner 10
gaps outer 10

input * {
    xkb_layout us,ru
    xkb_options grp:win_space_toggle
}


# output HDMI-A-1 {
#     resolution 3840x2160
#     scale 2
#     position 0 0
# }
#
# output eDP-1 {
#     resolution 1920x1080
#     scale 1.25
#     position 320 1080
# }

output eDP-1 {
    resolution 1920x1080
    scale 1.25
    position 0 0
}

input "1739:52837:DELL0A21:00_06CB:CE65_Touchpad" {
    tap enabled
    natural_scroll enabled
    dwt enabled
}

bindsym --to-code XF86MonBrightnessUp exec brightnessctl set +5%
bindsym --to-code XF86MonBrightnessDown exec brightnessctl set 5%-

bindsym --to-code $mod+apostrophe exec bash ~/.config/sway/scripts/wofi-emoji.sh
bindsym --to-code $mod+backslash exec bluetoothctl connect 00:A4:1C:6D:61:77

exec wl-clip-persist --clipboard regular
exec waybar
exec bongocat --config ~/.config/bongocat/bongocat.conf --watch-config
exec syncthing serve --no-browser

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

font Agave Nerd Font Mono 12
seat * xcursor_theme Moga-Neon-Blue 28

# If firefox doesn't respect the font, run `gsettings set org.gnome.desktop.interface cursor-theme "Moga-Neon-Blue"`

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym --to-code XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +3% && $refresh_i3status
bindsym --to-code XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -3% && $refresh_i3status
bindsym --to-code XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym --to-code XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

bindsym --to-code Print exec --no-startup-id grim -g "$(python3 ~/.config/sway/scripts/my-slurp.py)" ~/Pictures/Screenshots/shot_$(date +%Y_%m_%d_%H_%M_%S).png

bindsym --to-code XF86Calculator exec --no-startup-id wezterm start --always-new-process -e ipython ~/src/python_shell/main.py

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag titlebar

# start a terminal
bindsym --to-code $mod+Return exec wezterm start --always-new-process

# kill focused window
bindsym --to-code $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym --to-code $mod+d exec --no-startup-id lazyblock-menu
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym --to-code $mod+j focus left
bindsym --to-code $mod+k focus down
bindsym --to-code $mod+l focus up
bindsym --to-code $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym --to-code $mod+Left focus left
bindsym --to-code $mod+Down focus down
bindsym --to-code $mod+Up focus up
bindsym --to-code $mod+Right focus right

# move focused window
bindsym --to-code $mod+Shift+j move left
bindsym --to-code $mod+Shift+k move down
bindsym --to-code $mod+Shift+l move up
bindsym --to-code $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym --to-code $mod+Shift+Left move left
bindsym --to-code $mod+Shift+Down move down
bindsym --to-code $mod+Shift+Up move up
bindsym --to-code $mod+Shift+Right move right

# split in horizontal orientation
bindsym --to-code $mod+h split h

# split in vertical orientation
bindsym --to-code $mod+v split v

# enter fullscreen mode for the focused container
bindsym --to-code $mod+f fullscreen toggle

for_window [class=".*"] layout tabbed

# change container layout (stacked, tabbed, toggle split)
bindsym --to-code $mod+s layout stacking
bindsym --to-code $mod+w layout tabbed
bindsym --to-code $mod+e layout toggle split

# toggle tiling / floating
bindsym --to-code $mod+m floating toggle

# change focus between tiling / floating windows
bindsym --to-code $mod+Alt_L focus mode_toggle

# focus the parent container
bindsym --to-code $mod+a focus parent

# focus the child container
bindsym --to-code $mod+z focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym --to-code $mod+1 workspace number $ws1
bindsym --to-code $mod+2 workspace number $ws2
bindsym --to-code $mod+3 workspace number $ws3
bindsym --to-code $mod+4 workspace number $ws4
bindsym --to-code $mod+5 workspace number $ws5
bindsym --to-code $mod+6 workspace number $ws6
bindsym --to-code $mod+7 workspace number $ws7
bindsym --to-code $mod+8 workspace number $ws8
bindsym --to-code $mod+9 workspace number $ws9
bindsym --to-code $mod+0 workspace number $ws10

# move focused container to workspace
bindsym --to-code $mod+Shift+1 move container to workspace number $ws1
bindsym --to-code $mod+Shift+2 move container to workspace number $ws2
bindsym --to-code $mod+Shift+3 move container to workspace number $ws3
bindsym --to-code $mod+Shift+4 move container to workspace number $ws4
bindsym --to-code $mod+Shift+5 move container to workspace number $ws5
bindsym --to-code $mod+Shift+6 move container to workspace number $ws6
bindsym --to-code $mod+Shift+7 move container to workspace number $ws7
bindsym --to-code $mod+Shift+8 move container to workspace number $ws8
bindsym --to-code $mod+Shift+9 move container to workspace number $ws9
bindsym --to-code $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym --to-code $mod+Shift+c reload

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym --to-code j resize shrink width 10 px or 10 ppt
        bindsym --to-code k resize grow height 10 px or 10 ppt
        bindsym --to-code l resize shrink height 10 px or 10 ppt
        bindsym --to-code semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym --to-code Left resize shrink width 10 px or 10 ppt
        bindsym --to-code Down resize grow height 10 px or 10 ppt
        bindsym --to-code Up resize shrink height 10 px or 10 ppt
        bindsym --to-code Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym --to-code Return mode "default"
        bindsym --to-code Escape mode "default"
        bindsym --to-code $mod+r mode "default"
}

bindsym --to-code $mod+r mode "resize"

